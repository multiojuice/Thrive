<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//City Stuff
city_sprite = spr_city_people;
city_sprite_number = 0;
city_rank_building = 0;
axe_tool = "wood_axe";
pick_axe_tool = "wood_pick_axe";
hoe_tool = "wood_hoe";

//help FIX SOON
gov = obj_input.gov;
bres="wood";
resource = "stone"
on = false; // for the disease trigererng

// real stats

    //resourcces 
    wood = 10000;
    stone = 10000;
    iron = 10000;
    alloy = 0;
    diamond = 1000;
    food = 1000;
    
    //people stats
    people = 150;
    unpeople = people;
    pop_mine = 0;
    pop_mil = 0;
    pop_farm = 0;
    pop_tree = 0;
    pop_sci = 0;
    pop_build = 1000;
    employ_change = false;
    employ_allowed = true;
    military = 1;
    work = 25; // number that each worker counts as
    school_intellect = .5;
    school_count = 0;
    disease_number = 3;
    cure = 90;
//day stufff
alarm[6] = room_speed;
time = 100
day=1;
week=1;

// UPGRADE BOOLEANS HOLY SHIT SO MANY 
   
   //SCIENCE
            basic_mechanics = false;
            ore_smelting = false;
            arched_building = false;
            papyrus = false;
            food_preservation = false;
            mathematics = false;
            algebra = false;
            geometry = false;
            school_theory = false;
            astrology = false;
            cartography = false;
            refined_paper = false;
            printing_press = false;
            electricity = false;
            engineering = false;
            steam_engine = false;
            hydraulics= false;
            gas_engine = false;
            factory_designs = false;
            refrigeration = false;
            batteries = false;
            telephones = false;
            cell_phones = false;
            computers = false;
   //TOOLSSSSSS 
        basic_tools = false;
        telescope = false;
        compass = false;
        fishing_reel = false;
        plow = false;
        screws = false;
        stethoscope = false;
        newspaper = false;
        astrolabe = false;
        bomb = false;
        cannon = false;
        muskett = false;
        revolver = false;
        ship_sails = false;
        canvas = false;
        canvas_clothing = false;
    // Medicine
            basic_medicine = false;
            eyeglasses = false;
            herbal_medicine = false;
            toilet_paper = false;
    // Buildings
            // COunts
               smelting_building = 0;
               house_building = 0;
               row_boat_building = 0;
               mill_building = 0;
               aquaducts = false;
               roads = false;
               ship_building = 0;
               train_tracks = false;
               telephone_poles = false;
               school_building = 0;
               college_building = 0;
               hospital_building = 0;
               frack_building = 0;
               
            
            
            
//STARTING DEATH STATS
switch (gov) {
       case "democracy":
            health_s1 = .75;
            invasion1 = 1;
            trust1 = 1.25;
            
            health_s = 5*health_s1;
            resources = wood + stone + iron + alloy + diamond + food;
            invasion = 5*invasion1;
            disease = false;
            sick = 0;
            trust = 5*trust1;
            intellect1 = 1;
            intellect = 1;
            bpd = ceil(people/95); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/100)+sick;
            fpd = people*3;
            city_rank = 1;
       break;
       case "monarchy":
            health_s1 = 1;
            invasion1 = 1.25;
            trust1 = .75;
            
            health_s = 5*health_s1;
            resources = wood + stone + iron + alloy + diamond + food;
            invasion = 5*invasion1;
            disease = false;
            sick = 0;
            trust = 5*trust1;
            intellect1 = .5;
            intellect = 0;
            bpd = ceil(people/110); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/90)+sick;
            fpd = people*4;
            city_rank = 1;
       break;
       case "dictatorship":
            health_s1 = 1.25;
            invasion1 = .75;
            trust1 = 1;
            
            health_s = 90*health_s1;
            resources = wood + stone + iron + alloy + diamond + food;
            invasion = 90*invasion1;
            disease = false;
            sick = 0;
            trust = 90*trust1;
            intellect1 = .5;
            intellect = 0;
            bpd = ceil(people/85); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/110)+sick;
            fpd = people*2;
            city_rank = 1;
       break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// day alarm

if (time&gt;0) {
      time -= .5;
      alarm[6] = room_speed;
}else{
      time = 60; // 30 MIN IS 1 DAY
      day ++;
      people += bpd;
      people -= dpd;
      people -= sick;
      food -= fpd;
      health_s -= 2;
      if ((frac(day/7)) == 0) {
         week++
         intellect += (school_intellect*school_count)
         employ_allowed = true;
      }

      
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var j = irandom_range(1,100);
   var p = health_s*2;
   if (j&gt;=p) {
      scr_disease();
      
   }
   on = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///city
resources = wood + stone + iron + alloy + diamond + food;
switch (gov) {
       case "democracy":
            bpd = ceil(people/95); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/100) ;
            fpd = people*3;
       break;
       case "monarchy":
            bpd = ceil(people/110); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/90) ;
            fpd = people*4;
       break;
       case "dictatorship":
            bpd = ceil(people/85); //CHANGE PER DAYS DEPENDING ON GOV
            dpd = floor(people/110) ;
            fpd = people*2;
       break;
}
//DISEASE TRUGGER
if disease = false{
if on = false {
if (health_s &lt; 50) {
   if disease = false{
   alarm[1] = room_speed * 5;
   on = true;
   }
}
}
}
// DELETE THE UPGRADE DESCRIPTION

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    draw_text(575,628, "People" + string(people))
    draw_text(575,644, "Food" + string(food))
    draw_text(575,660, "Wood" + string(wood))
    draw_text(575,676, "Stone" + string(stone))
    draw_text(575,686, "Iron" + string(iron))
    draw_text(575,696, "Alloy" + string(alloy))
    draw_text(575,706, "Diamond" + string(diamond))
    // next layer
    
    draw_text(725,628, "Health and Saftey Level" + string(health_s))
    draw_text(725,638, "Invasion Chance" + string(invasion))
    draw_text(725,648, "Disease Spreading" + string(disease))
    draw_text(725,658, "Deaths Per Day" + string(dpd))
    draw_text(725,668, "Births Per Day" + string(bpd))
    draw_text(725,678, "Food Consumtion Per Day" + string(fpd))


//draw the day time alarm
draw_sprite_ext(spr_mine_time,0,0,0,(time/5),4,0,c_white,1);
draw_text(100,100,string(day));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != rm_menu) {
    view = view_current;
    room_goto(rm_menu);
    } else {
    room_goto(rm_tools)
    view_visible[view] = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

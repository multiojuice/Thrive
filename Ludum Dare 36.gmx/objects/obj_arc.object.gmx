<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name = noone;
sprite_index = spr_city_people;
image_xscale = .5;
image_yscale = .5;
str = noone;



// LOCATIONS
housey = y;
boatx = x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wehn clicked
switch (name) {
       case "Houses": 
            if obj_stats.house_building &lt;= 4 {
            if obj_stats.pop_build &gt;= 25 {
            if obj_stats.wood &gt;250 {
               obj_stats.wood -= 250;
                housey = obj_stats.house_building*128
                instance_create(1200,872+housey,obj_house);
                scr_urgent_text("A house has been built");
                obj_stats.house_building ++;
                } else {scr_urgent_text("You need to have 250 wood and 25 builders to build a house");
                }
                } else {
                scr_urgent_text("You need to have 250 wood and 25 builders to build a house");
                }
            } else {
            scr_urgent_text("Max houses have been built");
            }
            break;
       case "Row Boats": 
            if obj_stats.row_boat_building &lt;= 3 {
            if obj_stats.pop_build &gt;= 100 {
            if obj_stats.wood &gt;400 {
                obj_stats.wood -= 400;
                boatx = obj_stats.row_boat_building*128
                instance_create(64+boatx,2240,obj_rowboat);
                scr_urgent_text("A Row Boat has been built");
                obj_stats.row_boat_building ++;
                } else {
                scr_urgent_text("You need to have 400 wood and 100 builders to build a row boat");
                }
                } else {
                scr_urgent_text("You need to have 400 wood and 100 builders to build a row boat");
                }
            } else {
            scr_urgent_text("Max boats have been built");
            }
            break;
       case "Sailing Ships": 
            if obj_stats.ship_building &lt;= 3 {
            if obj_stats.pop_build &gt;= 400 {
            if obj_stats.wood &gt;1000 {
            if obj_stats.sails = true {
               obj_stats.wood -= 1000;
                shipx = obj_stats.ship_building*128
                instance_create(64+shipx,2240,obj_rowboat);
                scr_urgent_text("A Sailing ship has been built");
                obj_stats.ship_building ++;
                } else {
                scr_urgent_text("You need to have 1000 wood, sails, and 400 builders to build a sailing ship");
                }
                } else {
                scr_urgent_text("You need to have 1000 wood, sails, and 400 builders to build a sailing ship");
                }
                } else {
                scr_urgent_text("You need to have 1000 wood, sails, and 400 builders to build a sailing ship");
                }
            } else {
            scr_urgent_text("Max ships have been built");
            }
            break;
       case "Textile Mill": 
            if obj_stats.mill_building &lt;= 2 {
            if obj_stats.pop_build &gt;= 100 {
            if obj_stats.wood &gt;=200 {
            if obj_stats.stone &gt;=200 {
            if obj_stats.basic_mechanics =true {
                obj_stats.wood -= 200;
                obj_stats.stone -= 200
                millx = obj_stats.mill_building*128
                instance_create(1082+millx,128,obj_mill);
                scr_urgent_text("A Textile Mill has been built");
                obj_stats.mill_building ++;
                }else {
                scr_urgent_text("You need to have 200 wood, 200 stone, 250 builders and basic mechanics to build a mill");
                }
                } else {
                scr_urgent_text("You need to have 200 wood, 200 stone, 250 builders and basic mechanics to build a mill");
                }
                }else {
                scr_urgent_text("You need to have 200 wood, 200 stone, 250 builders and basic mechanics a to build a mill");
                }
                } else {
                scr_urgent_text("You need to have 200 wood, 200 stone, 250 builders and basic mechanics to build a mill");
                }
            } else {
            scr_urgent_text("Max mills have been built");
            }
            break;
       case "Aquaducts": 
            if obj_stats.aquaduct= false  {
            if obj_stats.pop_build &gt;= 600 {
            if obj_stats.iron &gt;=100 {
            if obj_stats.stone &gt;=400 {
            if obj_stats.arched_building =true {
                obj_stats.iron -= 100;
                obj_stats.stone -= 400
                with (obj_aquaduct) sprite_index = spr_aquaduct;      
                scr_urgent_text("The Aquaducts have been built");
                obj_stats.aquaducts = true;
                }else {
                scr_urgent_text("You need to have 100 iron, 400 stone, 600 builders and arched building methods to build aquaducts");
                }
                } else {
                scr_urgent_text("You need to have 100 iron, 400 stone, 600 builders and arched building methods to build aquaducts");
                }
                }else {
                scr_urgent_text("You need to have 100 iron, 400 stone, 600 builders and arched building methods to build aquaducts");
                }
                } else {
                scr_urgent_text("You need to have 100 iron, 400 stone, 600 builders and arched building methods to build aquaducts");
                }
            } else {
            scr_urgent_text("Aquaducts have already been built");
            }
            break;
       case "Roads": 
            if obj_stats.roads= false  {
            if obj_stats.pop_build &gt;= 250 {
            if obj_stats.stone &gt;=300 {
            if obj_stats.concrete =true {
            if obj_stats.geometry =true {
                obj_stats.stone -= 300
                with (obj_roads) sprite_index = spr_roads;      
                scr_urgent_text("The roads have been built");
                obj_stats.roads = true;
                }else {
                scr_urgent_text("You need to have 300 stone, 250 builders, geometry and concrete to build roads");
                }
                }else {
                scr_urgent_text("You need to have 300 stone, 250 builders, geometry and concrete to build roads");
                }
                } else {
                scr_urgent_text("You need to have 300 stone, 250 builders, geometry and concrete to build roads");
                }
                }else {
                scr_urgent_text("You need to have 300 stone, 250 builders, geometry and concrete to build roads");
                }
            } else {
            scr_urgent_text("The Roads have already been built");
            }
            break;
       case "Train Tracks": 
            if obj_stats.train_tracks= false  {
            if obj_stats.pop_build &gt;= 700 {
            if obj_stats.iron &gt;=300 {
            if obj_stats.roads =true {
            if obj_stats.trust &gt;= 60 {
                obj_stats.iron -= 300
                with (obj_train_tracks) sprite_index = spr_train_tracks;      
                scr_urgent_text("The Train Tracks have been built");
                obj_stats.train_tracks = true;
                }else {
                scr_urgent_text("You need to have 300 iron, 700 builders, roads and a trust level of 60 to build the train tracks");
                }
                }else {
                scr_urgent_text("You need to have 300 iron, 700 builders, roads and a trust level of 60 to build the train tracks");
                }
                } else {
                scr_urgent_text("You need to have 300 iron, 700 builders, roads and a trust level of 60 to build the train tracks");
                }
                }else {
                scr_urgent_text("You need to have 300 iron, 700 builders, roads and a trust level of 60 to build the train tracks");
                }
            } else {
            scr_urgent_text("The Tracks have already been built");
            }
            break;
            case "Telephone Poles": 
            if obj_stats.telephone_poles = false  {
            if obj_stats.pop_build &gt;= 700 {
            if obj_stats.wood &gt;=800 {
            if obj_stats.bronze &gt;= 300 {
            if obj_stats.electricity = true {
                obj_stats.bronze -= 300;
                obj_stats.wood -= 800;
                with (obj_telephone_poles) sprite_index = spr_telephone_poles;      
                scr_urgent_text("The Telephone Poles have been built");
                obj_stats.telephone_poles = true;
                }else {
                scr_urgent_text("You need to have 800 wood, 700 builders, 300 bronze and electricity to build the telephone poles");
                }
                }else {
                scr_urgent_text("You need to have 800 wood, 700 builders, 300 bronze and electricity to build the telephone poles");
                }
                } else {
                scr_urgent_text("You need to have 800 wood, 700 builders, 300 bronze and electricity to build the telephone poles");
                }
                }else {
                scr_urgent_text("You need to have 800 wood, 700 builders, 300 bronze and electricity to build the telephone poles");
                }
            } else {
            scr_urgent_text("The Poles have already been built");
            }
            break;
            
            
            
            
            
            
            
            
            
            
      case "Schools": 
            if obj_stats.school_building &lt;= 10 {
            if obj_stats.pop_build &gt;= 150 {
            if obj_stats.wood &gt;500 {
            if obj_stats.school_theory = true {
                obj_stats.wood -= 500;
                schoolx = obj_stats.school_building*128
                instance_create(64+schoolx,2240,obj_school); // FIX LOCATION
                scr_urgent_text("A school has been built");
                obj_stats.school_building ++;
                } else {
                scr_urgent_text("You need to have 500 wood, public school theory, and 150 builders to build a school");
                }
                } else {
                scr_urgent_text("You need to have 500 wood, public school theory, and 150 builders to build a school");
                }
                } else {
                scr_urgent_text("You need to have 500 wood, public school theory, and 150 builders to build a school");
                }
            } else {
            scr_urgent_text("Max schools have been built");
            }
            break; 
       
       case "Hospitals": 
            if obj_stats.hospital_building &lt;= 4 {
            if obj_stats.pop_build &gt;= 400 {
            if obj_stats.iron &gt;= 150 {
            if obj_stats.stone &gt;= 350 {
            if obj_stats.surgical_studies = true {
                obj_stats.iron -= 150;
                obj_stats.stone -= 350;
                hospitalx = obj_stats.hospital_building*128
                instance_create(64+hospitalx,2240,obj_hospital); // FIX LOCATION
                scr_urgent_text("A hospital has been built");
                obj_stats.hospital_building ++;
                } else {
                scr_urgent_text("You need to have 150 iron, 350 stone, 400 builders, and know surgical studies to build a hospital");
                }
                } else {
                scr_urgent_text("You need to have 150 iron, 350 stone, 400 builders, and know surgical studies to build a hospital");
                }
                } else {
                scr_urgent_text("You need to have 150 iron, 350 stone, 400 builders, and know surgical studies to build a hospital");
                }
                } else {
                scr_urgent_text("You need to have 150 iron, 350 stone, 400 builders, and know surgical studies to build a hospital");
                }
            } else {
            scr_urgent_text("Max hospitals have been built");
            }
            break;
       
       case "Colleges": 
            if obj_stats.college_building &lt;= 10 {
            if obj_stats.pop_build &gt;= 400 {
            if obj_stats.iron &gt;300 {
            if obj_stats.encyclopedia = true {
                obj_stats.iron -= 300;
                collegex = obj_stats.college_building*128
                instance_create(64+collegex,2240,obj_college); // FIX LOCATION
                scr_urgent_text("A college has been built");
                obj_stats.college_building ++;
                } else {
                scr_urgent_text("You need to have 300 iron, encyclopedias, and 400 builders to build a college");
                }
                } else {
                scr_urgent_text("You need to have 300 iron, encyclopedias, and 400 builders to build a college");
                }
                } else {
                scr_urgent_text("You need to have 300 iron, encyclopedias, and 400 builders to build a college");
                }
            } else {
            scr_urgent_text("Max colleges have been built");
            }
            case "Hydraulic Fracking Machines": 
            if obj_stats.frack_building &lt;= 2 {
            if obj_stats.pop_build &gt;= 1000 {
            if obj_stats.iron &gt;600 {
            if obj_stats.hydraulics = true {
                obj_stats.iron -= 600;
                frackx = obj_stats.frack_building*128
                instance_create(64+frackx,2240,obj_frack); // FIX LOCATION
                scr_urgent_text("A Hydraulic Fracking Machines has been built");
                obj_stats.frack_building ++;
                } else {
                scr_urgent_text("You need to have 600 iron, hydraulics, and 1000 builders to build a Hydraulic Fracking Machines");
                }
                } else {
                scr_urgent_text("You need to have 600 iron, hydraulics, and 1000 builders to build a Hydraulic Fracking Machines");
                }
                } else {
                scr_urgent_text("You need to have 600 iron, hydraulics, and 1000 builders to build a Hydraulic Fracking Machines");
                }
            } else {
            scr_urgent_text("Max Hydraulic Fracking Machines have been built");
            }
            break; 
       
       




}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mouse">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_text(str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y+64,name);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
